import telebot
from telebot import types
import requests
import os

BOT_TOKEN = "7974655972:AAFLmCVwL7amk7B8uQW3UmGP7616GKR8HHY"
CMC_API_KEY = "680f73b1-591c-4d53-817c-d0882ba12253"

bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ë–∏—Ç–∫–æ–∏–Ω)")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.strip().lower()
    if text in ["–±–∏—Ç–∫–æ–∏–Ω", "bitcoin", "btc"]:
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("infoBTC", callback_data="info_btc")
        markup.add(btn)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞—é —Ç–æ–ª—å–∫–æ '–ë–∏—Ç–∫–æ–∏–Ω' ‚Äî –Ω–∞–ø–∏—à–∏ –µ–≥–æ üòä")

@bot.callback_query_handler(func=lambda call: call.data == "info_btc")
def handle_info_btc(call):
    try:
        # --- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ BTC —Å CoinMarketCap
        url = "https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest"
        headers = {"X-CMC_PRO_API_KEY": CMC_API_KEY}
        params = {"symbol": "BTC", "convert": "USD"}

        response = requests.get(url, headers=headers, params=params)
        data = response.json()["data"]["BTC"]["quote"]["USD"]

        price = round(data["price"], 2)
        market_cap = round(data["market_cap"] / 1_000_000_000, 2)
        percent_change = round(data["percent_change_24h"], 2)

        # --- –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏
        fng_response = requests.get("https://api.alternative.me/fng/?limit=30")
        fng_data = fng_response.json()["data"]
        last_30 = [int(item["value"]) for item in fng_data]
        average_fng = round(sum(last_30) / len(last_30), 1)

        # --- –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"üìä *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Bitcoin (BTC)*\n"
            f"‚Ä¢ üíµ –¶–µ–Ω–∞: *${price}*\n"
            f"‚Ä¢ üí∞ –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: *${market_cap}B*\n"
            f"‚Ä¢ üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: *{percent_change}%*\n"
            f"‚Ä¢ üß† –°—Ä–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏ (30–¥): *{average_fng}/100*"
        )

        bot.send_message(call.message.chat.id, message_text, parse_mode="Markdown")
    except Exception as e:
        bot.send_message(call.message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

bot.polling()